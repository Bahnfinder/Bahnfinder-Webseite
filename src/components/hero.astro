---
import { Picture } from "@astrojs/image/components";
<<<<<<< HEAD
import heroImage from "assets/hero.png";
import Link from "@components/ui/link.astro";
import { Icon } from "astro-icon";
import Text from "@components/texts.astro";
---

<main class="grid lg:grid-cols-2 place-items-center pb-8 md:pt-12 md:pb-24">
  <div class="py-4 md:order-1 sm:order-1 md:block sm:block">
    <Picture
      src={heroImage}
      alt="Bilder der Bahnfinder-App"
      widths={[2048, 1024, 900, 600, 400]}
      aspectRatio="4:3"
      sizes="(max-width: 800px) (min-width: 300px) 100vw, 620px"
      loading="eager"
      format="png"
    />
=======
import spotlightVideo from "assets/BahnfinderSpotlight.mp4"; // Import the video file
---

<style>
.bahnfinder-label {
  min-height: 1.3em;
  display: inline-block;
  line-height: 1.2;
  padding-bottom: 0.2rem;
  font-weight: bold;
}

h1 {
  overflow: visible;
}

.image-wrapper {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

.video-loop {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-radius: 15%; /* Apply the same squircle effect if needed */
}
</style>

<main class="grid lg:grid-cols-2 place-items-center pb-8 md:pt-12 md:pb-24">
  <!-- Updated spotlight video section -->
  <div class="py-4 md:order-1 sm:order-1 md:block sm:block">
    <div class="image-wrapper">
      <video src={spotlightVideo} class="video-loop" autoplay loop muted playsinline></video>
    </div>
  </div>

  <!-- Current heroImage moved down -->
  <div class="py-8 md:order-2 sm:order-2 flex justify-center w-full">
>>>>>>> parent of d62f3f5 (Finished Website 2.0)
  </div>
  <div>
    <h1 class="flex-col text-5xl lg:text-6xl xl:text-7xl font-bold lg:tracking-tight xl:tracking-tighter">
      Bahnfinder.
    </h1>
    <p class="text-lg mt-4 text-slate-600 max-w-xl">
      Mithilfe der Bahnfinder-App kommst Du täglich einfacher und schneller durch den ÖPNV Deiner Stadt. <wbr />
      Lade Dir die App noch heute herunter und probier's gleich aus!
    </p>
    <div class="mt-6 flex flex-col sm:flex-row gap-3">
<a href="https://apps.apple.com/de/app/bahnfinder/id6446902537?itsct=apps_box_badge&amp;itscg=30200" style="display: inline-block; overflow: hidden; border-radius: 13px; width: 250px; height: 83px;"><img src="https://tools.applemediaservices.com/api/badges/download-on-the-app-store/white/de-de?size=250x83&amp;releaseDate=1680307200" alt="Download on the App Store" style="border-radius: 13px; width: 250px; height: 83px;"></a>
    </div>
  </div>
<<<<<<< HEAD
</main>
=======

  <!-- Typewriter Script -->
<script client:load>
    document.addEventListener("DOMContentLoaded", () => {
      const bahnfinderNames = [
        "Bahnfinder",
        "Busfinder",
        "U-Bahnfinder",
        "Fährenfinder",
        "Zugfinder",
        "Tramfinder",
        "Seilbahnfinder"
      ];
  
      const totalIcons = bahnfinderNames.length;
      const totalVideoDuration = 28.16; // in seconds
      const durationPerIcon = totalVideoDuration / totalIcons; // ≈4.02 seconds
      const transitionDuration = 0.3; // in seconds
      const bufferDuration = 0.02; // in seconds
      const visibleDuration = durationPerIcon - (2 * transitionDuration) - bufferDuration; // Time text is fully visible
  
      const bahnfinderLabel = document.getElementById("bahnfinder-label");
  
      if (!bahnfinderLabel) {
        console.error("Could not find the bahnfinder-label.");
        return;
      }
  
      bahnfinderLabel.setAttribute('aria-live', 'polite');
  
      let currentNameIndex = 0;
  
      function typeWriter() {
        const targetText = bahnfinderNames[currentNameIndex];
        bahnfinderLabel.textContent = '';
        let currentCharIndex = 0;
  
        // Typing speed calculated so typing finishes in transitionDuration
        const typingSpeed = (transitionDuration * 1000) / targetText.length;
  
        function type() {
          if (currentCharIndex < targetText.length) {
            bahnfinderLabel.textContent += targetText.charAt(currentCharIndex);
            currentCharIndex++;
            setTimeout(type, typingSpeed);
          } else {
            // Text is fully typed, wait for visibleDuration before erasing
            setTimeout(eraseWriter, visibleDuration * 1000);
          }
        }
  
        type();
      }
  
      function eraseWriter() {
        const targetText = bahnfinderNames[currentNameIndex];
        let currentCharIndex = targetText.length;
  
        // Erasing speed calculated so erasing finishes in transitionDuration
        const erasingSpeed = (transitionDuration * 1000) / targetText.length;
  
        function erase() {
          if (currentCharIndex > 0) {
            bahnfinderLabel.textContent = targetText.substring(0, currentCharIndex - 1);
            currentCharIndex--;
            setTimeout(erase, erasingSpeed);
          } else {
            // Move to the next word after bufferDuration
            currentNameIndex = (currentNameIndex + 1) % bahnfinderNames.length;
            setTimeout(typeWriter, bufferDuration * 1000);
          }
        }
  
        erase();
      }
  
      // Start the typewriter effect
      typeWriter();
    });
  </script>
</main>
>>>>>>> parent of d62f3f5 (Finished Website 2.0)
